{"version":3,"sources":["TitleCard/TitleCard.js","NavTabs/NavTabs.js","MelodyProduction/MelodyProduction.js","Interface/playButton.js","Interface/pauseButton.js","Interface/playController.js","Interface/LoadWheel.js","Interface/interface.js","App.js","serviceWorker.js","index.js"],"names":["TitleCard","Box","Paper","className","Typography","variant","component","NavTabs","props","square","Tabs","value","view","indicatorColor","textColor","onChange","event","newValue","updateView","aria-label","centered","Tab","label","disabled","mm","require","player","Player","melody","MusicRNN","cycleOne","cycleTwo","currentCycle","position","produceMelody","setLoading","a","Generate","b","c","Promise","all","then","values","async","push","console","log","start","Play","pos","Replace","seq","quantizationInfo","stepsPerQuarter","notes","totalQuantizedSteps","resolve","reject","continueSequence","STEPS_PER_PROG","contSeq","forEach","note","quantizedStartStep","quantizedEndStep","cycle","d","e","f","PlayButton","Fab","color","PauseButton","PlayController","state","LoadWheel","loading","CircularProgress","useState","tempo","setTempo","playerState","setPlayerState","FormControl","InputLabel","Select","target","setPlayerTempo","inputProps","MenuItem","onClick","pause","isPlaying","resume","Train","About","Container","maxWidth","elevation","Interface","App","setView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.803eb49e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TitleCard.css';\r\nimport { Box, Paper, Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function TitleCard(){\r\n    return (\r\n    <Box >\r\n        <Paper>\r\n            <div className=\"title\">\r\n                <Typography variant='h1' component='h1'>Machine Music</Typography>\r\n            </div>\r\n            <div className=\"subtitle\">\r\n            <Typography variant='h4' component='h4'>Procedurally generated music, powered by machine learning</Typography>\r\n            </div>\r\n        </Paper>\r\n    </Box>\r\n    )\r\n}","import React from \"react\";\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\n\r\nexport default function NavTabs(props) {\r\n  function handleChange(event, newValue) {\r\n    props.updateView(newValue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper square>\r\n        <Tabs\r\n          value={props.view}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs\"\r\n          centered={true}\r\n        >\r\n          <Tab label=\"Generate\" />\r\n          <Tab label=\"Train\" disabled />\r\n          <Tab label=\"About\" disabled />\r\n        </Tabs>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","const mm = require(\"@magenta/music\");\r\n\r\nconst player = new mm.Player();\r\nconst melody = new mm.MusicRNN(\r\n  \"https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/melody_rnn\"\r\n);\r\nlet cycleOne = [];\r\nlet cycleTwo = [];\r\nlet currentCycle = 1;\r\nlet position = 1;\r\n\r\nexport function produceMelody(setLoading) {\r\n  setLoading(true);\r\n  const a = Generate();\r\n  const b = Generate();\r\n  const c = Generate();\r\n\r\n  Promise.all([a, b, c]).then(values => {\r\n    async function add() {\r\n      cycleOne.push(values[0], values[1], values[0], values[1]);\r\n      cycleOne.push(values[0], values[2], values[0], values[2]);\r\n      cycleOne.push(values[0], values[1], values[0], values[1]);\r\n      cycleOne.push(values[0], values[2], values[0], values[2]);\r\n      setLoading(false);\r\n    }\r\n    add().then(() => {\r\n      console.log(cycleOne);\r\n      player.start(cycleOne[0]).then(() => {\r\n        Play(position);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction Play(pos) {\r\n  if (currentCycle === 1) {\r\n    if (pos === 1) {\r\n      Replace(2);\r\n    }\r\n    player.start(cycleOne[pos]).then(() => {\r\n      position = (pos + 1) % 16;\r\n      if (position % 16 === 1) {\r\n        currentCycle = 2;\r\n        Play(position);\r\n      } else {\r\n        Play(position);\r\n      }\r\n    });\r\n  }\r\n  if (currentCycle === 2) {\r\n    if (pos === 1) {\r\n      Replace(1);\r\n    }\r\n    player.start(cycleTwo[pos]).then(() => {\r\n      position = (pos + 1) % 16;\r\n      if (position % 16 === 1) {\r\n        currentCycle = 1;\r\n        Play(position);\r\n      } else {\r\n        Play(position);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction Generate() {\r\n  const STEPS_PER_CHORD = 2;\r\n  const STEPS_PER_PROG = 4 * STEPS_PER_CHORD;\r\n  const NUM_REPS = 4;\r\n\r\n  let seq = {\r\n    quantizationInfo: { stepsPerQuarter: 4 },\r\n    notes: [],\r\n    totalQuantizedSteps: 1\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      melody\r\n        .continueSequence(\r\n          seq,\r\n          STEPS_PER_PROG + (NUM_REPS - 1) * STEPS_PER_PROG - 1,\r\n          0.9\r\n        )\r\n        .then(contSeq => {\r\n          contSeq.notes.forEach(note => {\r\n            note.quantizedStartStep += 1;\r\n            note.quantizedEndStep += 1;\r\n            seq.notes.push(note);\r\n          });\r\n          resolve(seq);\r\n        });\r\n    } catch {\r\n      reject(console.log(\"Creation of melody failed.\"));\r\n    }\r\n  });\r\n}\r\n\r\nfunction Replace(cycle) {\r\n  if (cycle === 2) {\r\n    cycleTwo = [];\r\n    const d = Generate();\r\n    const e = Generate();\r\n    const f = Generate();\r\n\r\n    Promise.all([d, e, f]).then(values => {\r\n      cycleTwo.push(values[0], values[1], values[0], values[1]);\r\n      cycleTwo.push(values[0], values[2], values[0], values[2]);\r\n      cycleTwo.push(values[0], values[1], values[0], values[1]);\r\n      cycleTwo.push(values[0], values[2], values[0], values[2]);\r\n      console.log(cycleTwo);\r\n    });\r\n  }\r\n  if (cycle === 1) {\r\n    cycleOne = [];\r\n    const a = Generate();\r\n    const b = Generate();\r\n    const c = Generate();\r\n\r\n    Promise.all([a, b, c]).then(values => {\r\n      cycleOne.push(values[0], values[1], values[0], values[1]);\r\n      cycleOne.push(values[0], values[2], values[0], values[2]);\r\n      cycleOne.push(values[0], values[1], values[0], values[1]);\r\n      cycleOne.push(values[0], values[2], values[0], values[2]);\r\n    });\r\n  }\r\n}\r\n\r\nexport function Pause() {\r\n  player.pause();\r\n}\r\nexport function Resume() {\r\n  player.resume();\r\n}\r\nexport function isPlayerInitiated() {\r\n  return player.isPlaying();\r\n}\r\nexport function setPlayerTempo(tempo) {\r\n  player.setTempo(tempo);\r\n}\r\n","import React from \"react\";\r\nimport { Fab } from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\n\r\nfunction PlayButton() {\r\n  return (\r\n    <Fab color=\"primary\" aria-label=\"play\">\r\n      <PlayArrowIcon></PlayArrowIcon>\r\n    </Fab>\r\n  );\r\n}\r\n\r\nexport default PlayButton;\r\n","import React from \"react\";\r\nimport { Fab } from \"@material-ui/core\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\n\r\nfunction PauseButton() {\r\n  return (\r\n    <Fab color=\"primary\" aria-label=\"pause\">\r\n      <PauseIcon></PauseIcon>\r\n    </Fab>\r\n  );\r\n}\r\n\r\nexport default PauseButton;\r\n","import React from \"react\";\r\nimport PlayButton from \"./playButton.js\";\r\nimport PauseButton from \"./pauseButton.js\";\r\n\r\nfunction PlayController(props) {\r\n  const playerState = props.state;\r\n  if (playerState === false) {\r\n    return <PlayButton></PlayButton>;\r\n  } else {\r\n    return <PauseButton></PauseButton>;\r\n  }\r\n}\r\n\r\nexport default PlayController;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nvar loading = false;\r\n\r\nexport function startLoadWheel() {\r\n  loading = true;\r\n}\r\nexport function stopLoadWheel() {\r\n  loading = false;\r\n}\r\n\r\nexport default function LoadWheel(props) {\r\n  loading = props.loading;\r\n  if (loading === true) {\r\n    return <CircularProgress color=\"primary\"></CircularProgress>;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport {\r\n  produceMelody,\r\n  setPlayerTempo,\r\n  Pause,\r\n  Resume,\r\n  isPlayerInitiated\r\n} from \"../MelodyProduction/MelodyProduction\";\r\nimport \"./interface.css\";\r\nimport PlayController from \"./playController\";\r\nimport LoadWheel from \"./LoadWheel\";\r\n\r\nfunction Generate() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [tempo, setTempo] = useState(140);\r\n\r\n  const handleTempoChange = event => {\r\n    setTempo(event.target.value);\r\n    setPlayerTempo(tempo);\r\n  };\r\n\r\n  const [playerState, setPlayerState] = useState(false);\r\n\r\n  function handlePlayerChange() {\r\n    if (playerState === true) {\r\n      setPlayerState(false);\r\n      Pause();\r\n    }\r\n    if (playerState === false) {\r\n      setPlayerState(true);\r\n      if (isPlayerInitiated() === false) {\r\n        produceMelody(setLoading);\r\n      }\r\n      Resume();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h1\" component=\"h1\">\r\n        Generate\r\n      </Typography>\r\n      <FormControl>\r\n        <InputLabel>Tempo</InputLabel>\r\n        <Select\r\n          value={tempo}\r\n          onChange={handleTempoChange}\r\n          inputProps={{\r\n            tempo: \"tempo\"\r\n          }}\r\n        >\r\n          <MenuItem value={60}>60</MenuItem>\r\n          <MenuItem value={80}>80</MenuItem>\r\n          <MenuItem value={100}>100</MenuItem>\r\n          <MenuItem value={120}>120</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div className=\"play-controller-wrapper\" onClick={handlePlayerChange}>\r\n        <PlayController state={playerState}></PlayController>\r\n      </div>\r\n      <LoadWheel loading={loading}></LoadWheel>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Train() {\r\n  return (\r\n    <Typography variant=\"h1\" component=\"h1\">\r\n      Train\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"main\">\r\n      <Container maxWidth=\"sm\">\r\n        <Paper className=\"About\" elevation=\"5\">\r\n          <Typography variant=\"h5\" component=\"h5\">\r\n            Machine music was made by Andrew Richardson as a sumbission for my\r\n            final year project.\r\n          </Typography>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Interface(props) {\r\n  switch (props.view) {\r\n    case 0:\r\n      return <Generate />;\r\n    case 1:\r\n      return <Train />;\r\n    case 2:\r\n      return <About />;\r\n    default:\r\n      return <Generate />;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport TitleCard from \"./TitleCard/TitleCard\";\r\nimport NavTabs from \"./NavTabs/NavTabs\";\r\nimport Interface from \"./Interface/interface\";\r\n\r\nfunction App() {\r\n  const [view, setView] = useState(0);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Header\">\r\n        <TitleCard></TitleCard>\r\n      </div>\r\n      <div className=\"Body\">\r\n        <NavTabs view={view} updateView={setView} />\r\n        <Interface view={view}></Interface>\r\n      </div>\r\n      <div className=\"Footer\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}